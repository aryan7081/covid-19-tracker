{"ast":null,"code":"var _jsxFileName = \"/Users/gangadgaryadav/covid-19-tracker/src/LineGraph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\nfunction LineGraph({\n  casesType\n}) {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => {\n        return response.json();\n      }).then(data => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData);\n        console.log(chartData);\n        // buildChart(chartData);\n      });\n    };\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }));\n}\nexport default LineGraph;","map":{"version":3,"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","setData","fetchData","fetch","then","response","json","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","datasets","backgroundColor","borderColor"],"sources":["/Users/gangadgaryadav/covid-19-tracker/src/LineGraph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          console.log(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}