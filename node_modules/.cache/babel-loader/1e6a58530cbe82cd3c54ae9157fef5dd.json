{"ast":null,"code":"var _jsxFileName = \"/Users/gangadgaryadav/covid-19-tracker/src/util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  fillOpacity: 0.4,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-flag\",\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 11\n  }\n}, country.country), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-confirmed\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 11\n  }\n}, \"Cases: \", numeral(country.cases).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-recovered\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 11\n  }\n}, \"Recovered: \", numeral(country.recovered).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-deaths\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 11\n  }\n}, \"Deaths: \", numeral(country.deaths).format(\"0,0\"))))));","map":{"version":3,"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","createElement","center","countryInfo","lat","long","color","fillColor","fillOpacity","radius","Math","sqrt","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundImage","flag"],"sources":["/Users/gangadgaryadav/covid-19-tracker/src/util.js"],"sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}